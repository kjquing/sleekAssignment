<Activity mc:Ignorable="sap sap2010" x:Class="AcmeExtractInformation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_wiidRow" Type="InArgument(x:String)" />
    <x:Property Name="io_dtReportTemp" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_reportPath" Type="InArgument(x:String)" />
    <x:Property Name="in_transactionItem" Type="InArgument(sd:DataRow)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>544.8,2417.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>AcmeExtractInformation_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="22">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="AcmeExtractInformation" sap:VirtualizedContainerService.HintSize="524.8,2317.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="extractedPdf" />
      <Variable x:TypeArguments="x:String" Name="clientName" />
      <Variable x:TypeArguments="x:String" Name="clientId" />
      <Variable x:TypeArguments="x:String" Name="checkDate" />
      <Variable x:TypeArguments="x:String" Name="checkNumber" />
      <Variable x:TypeArguments="x:String" Name="checkAmount" />
      <Variable x:TypeArguments="x:String" Name="pdfEndpoint" />
      <Variable x:TypeArguments="x:String" Name="pdfDownloadPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="483.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;[Process] Extract Information&quot;]" />
    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'current wiid action'" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
      <ui:Click.CursorPosition>
        <ui:CursorPosition Position="Center">
          <ui:CursorPosition.OffsetX>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetX>
          <ui:CursorPosition.OffsetY>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetY>
        </ui:CursorPosition>
      </ui:Click.CursorPosition>
      <ui:Click.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="8bcc6af34579fc428775400460b69f37" Selector="&lt;html app='msedge.exe' title='ACME System*' /&gt;&lt;webctrl tableRow='{{in_wiidRow}}' tag='I' colName='Actions' tableCol='1' /&gt;">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:Click.Target>
    </ui:Click>
    <ui:OnUiElementAppear ContinueOnError="{x:Null}" FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="On Element Appear 'Work Item Details'" sap:VirtualizedContainerService.HintSize="483.2,376.8" sap2010:WorkflowViewState.IdRef="OnUiElementAppear_1" RepeatForever="False">
      <ui:OnUiElementAppear.Body>
        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,200" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Download Check Request'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d5dce78e4fc4e3c3b023ae92af5ff3cc" Selector="&lt;html app='msedge.exe' title='ACME System*' /&gt;&lt;webctrl aaname=' Download Check Request' tag='BUTTON' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:Click.Target>
          </ui:Click>
        </Sequence>
      </ui:OnUiElementAppear.Body>
      <ui:OnUiElementAppear.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b9dca43b024eb37619170a19b35cc751" Selector="&lt;html app='msedge.exe' title='ACME System*' /&gt;&lt;webctrl tag='LI' aaname='Work Item Details' innertext='Work Item Details' /&gt;">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:OnUiElementAppear.Target>
    </ui:OnUiElementAppear>
    <DoWhile sap2010:Annotation.AnnotationText="wait for page to navigate to pdfEndpoint" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="483.2,328.8" sap2010:WorkflowViewState.IdRef="DoWhile_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <DoWhile.Condition>
        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="Not pdfEndpoint.Contains(&quot;Check-Request&quot;)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
      </DoWhile.Condition>
      <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="url" DisplayName="Get Attribute 'pdf'" sap:VirtualizedContainerService.HintSize="333.6,135.2" sap2010:WorkflowViewState.IdRef="GetAttribute_1">
        <ui:GetAttribute.Result>
          <OutArgument x:TypeArguments="x:String">[pdfEndpoint]</OutArgument>
        </ui:GetAttribute.Result>
        <ui:GetAttribute.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="3460467dbc06d62426954c559e9ede76" Selector="&lt;html app='msedge.exe' title='Check-Request-For*' /&gt;">
            <ui:Target.TimeoutMS>
              <InArgument x:TypeArguments="x:Int32" />
            </ui:Target.TimeoutMS>
            <ui:Target.WaitForReady>
              <InArgument x:TypeArguments="ui:WaitForReady" />
            </ui:Target.WaitForReady>
          </ui:Target>
        </ui:GetAttribute.Target>
      </ui:GetAttribute>
    </DoWhile>
    <Assign sap2010:Annotation.AnnotationText="pdf download path" sap:VirtualizedContainerService.HintSize="483.2,91.2" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[pdfDownloadPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Path.Combine(Environment.CurrentDirectory, "Data", "Input", in_transactionItem("WIID").tostring.trim + ".pdf”)]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PdfDownload workflow" sap:VirtualizedContainerService.HintSize="483.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflows\PDF\PdfDownload.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_pdfPath">[pdfDownloadPath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_endpoint">[pdfEndpoint]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PdfExtractData workflow" sap:VirtualizedContainerService.HintSize="483.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflows\PDF\PdfExtractData.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_pdfPath">[pdfDownloadPath]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_extractedPdf">[extractedPdf]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign DisplayName="Assign clientName" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[clientName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[extractedPdf.Split({Environment.NewLine}, StringSplitOptions.None).FirstOrDefault(Function(x) x.Contains("Client Name")).Replace("Client Name", "").trim]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign clientId" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[clientId]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[extractedPdf.Split({Environment.NewLine}, StringSplitOptions.None).FirstOrDefault(Function(x) x.Contains("Client ID")).Replace("Client ID", "").trim]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign checkNumber" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[checkNumber]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[extractedPdf.Split({Environment.NewLine}, StringSplitOptions.None).FirstOrDefault(Function(x) x.Contains("Check Number")).Replace("Check Number", "").trim]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign checkDate" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[checkDate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[extractedPdf.Split({Environment.NewLine}, StringSplitOptions.None).FirstOrDefault(Function(x) x.Contains("Check Date")).Replace("Check Date", "").trim]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign checkAmount" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[checkAmount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[extractedPdf.Split({Environment.NewLine}, StringSplitOptions.None).FirstOrDefault(Function(x) x.Contains("Check Amount")).Replace("Check Amount", "").trim]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{clientName, clientID, checkNumber, checkDate, checkAmount}]" DataTable="[io_dtReportTemp]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="483.2,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
    <ui:AppendRange DataTable="[io_dtReportTemp]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="483.2,116" sap2010:WorkflowViewState.IdRef="AppendRange_1" SheetName="Sheet1" WorkbookPath="[in_reportPath]" />
    <ui:Delete ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="For cleanup" DisplayName="Delete pdfDownload" sap:VirtualizedContainerService.HintSize="483.2,53.6" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[pdfDownloadPath]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:Delete>
  </Sequence>
</Activity>